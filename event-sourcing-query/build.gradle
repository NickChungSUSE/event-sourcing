plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}
group = 'com.neu.eventsourcing.query'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'io.opentelemetry:opentelemetry-api:1.46.0'
    implementation 'org.axonframework:axon:4.10.3'
    implementation 'org.axonframework:axon-configuration:4.10.3'
    implementation 'org.axonframework:axon-spring-boot-starter:4.10.3'
    implementation 'org.slf4j:slf4j-api:2.0.16'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.launch.JarLauncher'
        attributes 'Start-Class': 'com.neu.eventsourcing.query.main.Application'
    }
}

jar {
    enabled = false
}